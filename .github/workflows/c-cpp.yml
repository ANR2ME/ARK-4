name: ARK-4
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  schedule:
    - cron: '0 0 * * *'
jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2
      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: sudo apt-get install autoconf automake bison flex gcc libmpfr-dev libncurses5-dev libreadline-dev libusb-dev make patch subversion texinfo wget git python2
    - name: Extract SDK
      run: sudo 7z -o/usr/local/ x ./contrib/PC/PSPSDK/pspdev.7z 
    - name: Change Permissions
      run: sudo chown $GITHUB_USER:$GITHUB_USER /usr/local/pspdev && sudo chmod 755 -R /usr/local/pspdev
    - name: Setup Path
      run: echo "/usr/local/pspdev/bin" >> $GITHUB_PATH #export $GITHUB_PATH="/usr/local/pspdev/bin:$GITHUB_PATH" && export PSPDEV="/usr/local/pspdev"
    - name: Print PATH
      run: echo $GITHUB_PATH
    - name: Fix libmpfr
      run: sudo ln -s /usr/lib/x86_64-linux-gnu/libmpfr.so.6 /usr/lib/x86_64-linux-gnu/libmpfr.so.4
    - name: sign_np
      run: cd .. && curl -OJL "https://github.com/swarzesherz/sign_np/archive/refs/tags/v1.0.2.tar.gz" && tar xvf sign_np-1.0.2.tar.gz && cd sign_np-1.0.2 && make && sudo cp sign_np /usr/local/pspdev/bin
    - name: Making ARK-4
      run: make
    - name: Compressing dist directory up
      run: cd ./dist && sudo tar czvf ARK-4.tar.gz * && mv ARK-4.tar.gz .. && sudo zip -r ARK-4.zip * && mv ARK-4.zip ..

    - name: release
      uses: actions/create-release@latest
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: nightly-1 
        release_name: ${{ github.sha }}
    - name: upload GZIP artifact 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "ARK-4.tar.gz"
        asset_name: "ARK-4.tar.gz"
        asset_content_type: application/gzip
    - name: upload ZIP artifact 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "ARK-4.zip"
        asset_name: "ARK-4.zip"
        asset_content_type: application/zip
